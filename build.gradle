buildscript {
	ext {
		springBootVersion = '2.0.9.RELEASE'
	}

	repositories {
		mavenCentral()
	}
	dependencies {
	}

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'base'
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.bmuschko.cargo'
apply plugin: 'io.spring.dependency-management'  // плагин для правильной загрузки зависимостей spring
apply plugin: 'com.bmuschko.tomcat'
apply plugin: 'eclipse-wtp'

buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'com.bmuschko:gradle-cargo-plugin:2.2.3'
		classpath 'com.bmuschko:gradle-tomcat-plugin:2.4.2'
	}
}

war {
	archiveBaseName = 'library'
	version = '0.0.1-SNAPSHOT'
}


sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()

	// репозиторий для скачивания зависимостей primefaces
	maven {
		url 'http://repository.primefaces.org'
	}
}

ext['hibernate.version'] = '5.4.2.Final'


configurations {
//	compile.exclude module: 'spring-boot-starter-tomcat'// исключаем Tomcat, т.к. мы используем GlassFish
}

dependencies {


def tomcatVersion = '9.0.37'
	tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
	"org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
	"org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"

	// для стартеров будет использоваться версия, указанная в переменной springBootVersion
	implementation("org.springframework.boot:spring-boot-starter-web") // веб возможности Spring
	implementation("org.springframework.boot:spring-boot-starter-data-jpa") // работа с БД
	implementation("org.springframework.boot:spring-boot-starter-security") // авторизация, аутентификация
	implementation("org.springframework.boot:spring-boot-starter-aop") // для использования аспектов (отлавливание ошибок, действий пользователя - для отображения сообщений)
	implementation("org.springframework.boot:spring-boot-starter-actuator")// служебные данные во время работы приложения (бины, endpoints и пр.)

	implementation 'com.google.guava:guava:+'// утилиты по разным направлениям Java

	implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.19' // драйвер MySQL (используем версию 8.0.19)
	providedCompile 'javax:javaee-api:7.0' // в GlassFish (Payara) уже есть эта библиотека, поэтому добавляем только для компиляции

	providedCompile 'org.projectlombok:lombok:1.18.6' // уменьшение кода
	annotationProcessor 'org.projectlombok:lombok:1.18.6'

	// frontend
	implementation 'org.primefaces:primefaces:6.0'
	implementation group: 'javax.el', name: 'javax.el-api', version: '3.0.0'
	implementation 'org.omnifaces:omnifaces:2.5.1'
	implementation 'net.bootsfaces:bootsfaces:1.0.0'

	implementation 'commons-io:commons-io:+'// для загрузки файлов в приложении
	implementation 'commons-fileupload:commons-fileupload:+'
	implementation('org.primefaces.themes:bootstrap:1.0.10')

}
cargo {
	containerId = 'tomcat9.0.37'
	port = 9090

	deployable {

		file = new File('/usr/local/Cellar/tomcat/9.0.37/libexec/webapps/manager/gradleTutorial.war')
		context = 'gradleTutorial'
	}

	local {
		homeDir = file('/usr/local/Cellar/tomcat/9.0.37')
		outputFile = file('build/output.log')
		timeout = 60000

		containerProperties {
			property 'cargo.tomcat.ajp.port', 9099
		}
	}
}

	tomcat {
		httpPort = 9090
		httpsPort = 9091
		enableSSL = true
		contextPath = 'gradleTutorial'
 }

bootWar {
	enabled = false
}

jar {
	enabled = true
}